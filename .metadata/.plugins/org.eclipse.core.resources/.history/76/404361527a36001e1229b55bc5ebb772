package sorts;

import java.util.List;

public class Quick {
	
	public Quick(){}
	
	// 퀵정렬 - 정렬할 값을 통해 오름차순, 내림차순 가능 현재 오름차순
	public void quickDistinct(int left, int right, List<Integer> arrays) {
		if(left >= right) {
			return;
		}
		int pivot = left;
		int lefts = pivot+1;
		int rights = right;
		
		while(lefts <= rights) { // 비교하는 값을 작은 쪽으로 퀵정렬하면 오름차순, 큰 쪽으로 퀵정렬하면 내림차순
			while(lefts<=rights && arrays.get(pivot) >= arrays.get(lefts)) {
				lefts++;
			}
			
			while(lefts<=rights && arrays.get(pivot)<=arrays.get(rights)) {
				rights--;
			}
			
			if(lefts < rights) {
				int temp = arrays.get(lefts);
				// arrays.get(lefts) = arrays.get(rights);
				// arrays.get(rights) = temp;
			}
		}
		
		// Category temp = category[pivot];
		// category[pivot] = category[rights];
		// category[rights] = temp;
		
		quickDistinct(left, rights-1, key, category);
		quickDistinct(rights+1, right, key, category);
	}
}
