package schools;

import java.util.Arrays;

public class Classes {
	String name;
	Student[] students;
	int totalClassRank;
	
	public Classes(String name, Student... students) {
		this.name = name;
		this.students = students;
		rankCalc();
		quickDistinct(0, this.students.length-1, this.students);
	}
	void rankCalc() {
		
		for(Student std : students) {
			int count = 1;
			for(Student sd : students) {
				if(std.avg < sd.avg) {
					count++;
				}
			}
			
			std.classesRank = count;
		}
	}
	void quickDistinct(int left, int right, Student... students) {
		if(left >= right) {
			return;
		}
		int pivot = left;
		int lefts = pivot+1;
		int rights = right;
		
		while(lefts <= rights) { // 비교하는 값을 작은 쪽으로 퀵정렬하면 오름차순, 큰 쪽으로 퀵정렬하면 내림차순
			while(lefts<=rights && students[pivot].classesRank >= students[lefts].classesRank) {
				lefts++;
			}
			
			while(lefts<=rights && students[pivot].classesRank <= students[rights].classesRank) {
				rights--;
			}
			
			if(lefts < rights) {
				Student temp = students[lefts];
				students[lefts] = students[rights];
				students[rights] = temp;
			}
		}
		
		Student temp = students[pivot];
		students[pivot] = students[rights];
		students[rights] = temp;
		
		quickDistinct(left, rights-1, students);
		quickDistinct(rights+1, right, students);
	}
}
